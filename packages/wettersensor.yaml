##############################
## lokaler Wettersensor
##############################

sensor:
  - platform: rest
    name: Wettersensor
    resource: http://192.168.0.11/
    json_attributes:
      - readingAgeMs
      - temperatureC
      - sunEastKlx
      - sunSouthKlx
      - sunWestKlx
      - daylightLx
      - isDark
      - windSpeedMs
      - windSpeedGustsMs
      - isRaining
    scan_interval: 60
  - platform: template
    sensors:
      wettersensor_reading_age:
        value_template: '{{ states.sensor.wettersensor.attributes["readingAgeMs"] }}'
        unit_of_measurement: "ms"
      wettersensor_temperature:
        value_template: '{{ states.sensor.wettersensor.attributes["temperatureC"] }}'
        unit_of_measurement: "°C"
      wettersensor_sun_east:
        value_template: '{{ states.sensor.wettersensor.attributes["sunEastKlx"] }}'
        unit_of_measurement: "klx"
      wettersensor_sun_south:
        value_template: '{{ states.sensor.wettersensor.attributes["sunSouthKlx"] }}'
        unit_of_measurement: "klx"
      wettersensor_sun_west:
        value_template: '{{ states.sensor.wettersensor.attributes["sunWestKlx"] }}'
        unit_of_measurement: "klx"
      wettersensor_daylight:
        value_template: '{{ states.sensor.wettersensor.attributes["daylightLx"] }}'
        unit_of_measurement: "lx"
      wettersensor_is_dark:
        value_template: "{% if is_state_attr('sensor.wettersensor', 'isDark', 0) %} nein {% elif is_state_attr('sensor.wettersensor', 'isDark', 1) %} ja {% else %} Invalid: '{{ state_attr('sensor.wettersensor', 'isDark') }}' {% endif %}"
      wettersensor_wind_speed:
        value_template: '{{ (states.sensor.wettersensor.attributes["windSpeedMs"] | float * 3.6) | int }}'
        unit_of_measurement: "km/h"
      wettersensor_wind_speed_gusts:
        value_template: '{{ (states.sensor.wettersensor.attributes["windSpeedGustsMs"] | float * 3.6) | int }}'
        unit_of_measurement: "km/h"
      wettersensor_is_raining:
        value_template: "{% if is_state_attr('sensor.wettersensor', 'isRaining', 0) %} nein {% elif is_state_attr('sensor.wettersensor', 'isRaining', 1) %} ja {% else %} Invalid: '{{ state_attr('sensor.wettersensor', 'isRaining') }}' {% endif %}"

group:
  wetter_lokal:
    name: Wetter lokal
    entities:
      - sensor.wettersensor_reading_age
      - sensor.wettersensor_temperature
      - sensor.wettersensor_sun_east
      - sensor.wettersensor_sun_south
      - sensor.wettersensor_sun_west
      - sensor.wettersensor_daylight
      - sensor.wettersensor_is_dark
      - sensor.wettersensor_wind_speed
      - sensor.wettersensor_wind_speed_gusts
      - sensor.wettersensor_is_raining

history_graph:
  wetter_lokal:
    name: Wetter lokal
    entities:
      - sensor.wettersensor_reading_age
      - sensor.wettersensor_temperature
      - sensor.wettersensor_sun_east
      - sensor.wettersensor_sun_south
      - sensor.wettersensor_sun_west
      - sensor.wettersensor_daylight
      - sensor.wettersensor_is_dark
      - sensor.wettersensor_wind_speed
      - sensor.wettersensor_wind_speed_gusts
      - sensor.wettersensor_is_raining
    hours_to_show: 72
    refresh: 60

homeassistant:
  customize:
    sensor.wettersensor_reading_age:
      friendly_name: Alter d. Messung
    sensor.wettersensor_temperature:
      friendly_name: Außentemperatur
    sensor.wettersensor_sun_east:
      friendly_name: Sonne von Osten
    sensor.wettersensor_sun_south:
      friendly_name: Sonne von Süden
    sensor.wettersensor_sun_west:
      friendly_name: Sonne von Westen
    sensor.wettersensor_daylight:
      friendly_name: Helligkeit
    sensor.wettersensor_is_dark:
      friendly_name: dunkel
    sensor.wettersensor_wind_speed:
      friendly_name: Windgeschwindigkeit
    sensor.wettersensor_wind_speed_gusts:
      friendly_name: Böen
    sensor.wettersensor_is_raining:
      friendly_name: Regen
