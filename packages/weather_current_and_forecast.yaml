sensor:

  - platform: influxdb
    host: a0d7b954-influxdb
    username: homeassistant
    password: !secret influxdb_password
    queries:
      - name: sum_rain_24h
        where: 'entity_id = ''esp_weathersensor_tipping_bucket_precipitation'' and time > now() - 24h'
        measurement: 'mm'
        group_function: sum
        value_template: '{{ value | round(1) }}'
        unit_of_measurement: 'mm'
      - name: sum_rain_3d
        where: 'entity_id = ''esp_weathersensor_tipping_bucket_precipitation'' and time > now() - 3d'
        measurement: 'mm'
        group_function: sum
        value_template: '{{ value | round(1) }}'
        unit_of_measurement: 'mm'
      - name: sum_rain_7d
        where: 'entity_id = ''esp_weathersensor_tipping_bucket_precipitation'' and time > now() - 7d'
        measurement: 'mm'
        group_function: sum
        value_template: '{{ value | round(1) }}'
        unit_of_measurement: 'mm'
      - name: sum_rain_14d
        where: 'entity_id = ''esp_weathersensor_tipping_bucket_precipitation'' and time > now() - 14d'
        measurement: 'mm'
        group_function: sum
        value_template: '{{ value | round(1) }}'
        unit_of_measurement: 'mm'
      - name: sum_rain_21d
        where: 'entity_id = ''esp_weathersensor_tipping_bucket_precipitation'' and time > now() - 21d'
        measurement: 'mm'
        group_function: sum
        value_template: '{{ value | round(1) }}'
        unit_of_measurement: 'mm'
      - name: sum_rain_30d
        where: 'entity_id = ''esp_weathersensor_tipping_bucket_precipitation'' and time > now() - 30d'
        measurement: 'mm'
        group_function: sum
        value_template: '{{ value | round(1) }}'
        unit_of_measurement: 'mm'

  - platform: scrape
    name: oberursel_wasserampel_raw
    resource: https://www.stadtwerke-oberursel.de/Wasserampel
    select: 'img[src*="/Wasserampel/Kopfbild/"]'
    attribute: src
    value_template: '{{ value|regex_findall_index("gruen|gelb|rot", ignorecase=True) }}'

  - platform: rest
    name: weather_met_no_rest
    resource_template: !secret met_no_home_url
    value_template: '{{ value_json.properties.meta.updated_at }}'
    json_attributes_path: '$.properties'
    json_attributes:
      - meta
      - timeseries
    scan_interval: 600

  - platform: template
    sensors:
      esp_weathersensor_multisensor_is_dark_disp:
        value_template: "{% if is_state('binary_sensor.esp_weathersensor_multisensor_is_dark', 'off') %} nein {% elif is_state('binary_sensor.esp_weathersensor_multisensor_is_dark', 'on') %} ja {% else %} Invalid: '{{ states('binary_sensor.esp_weathersensor_multisensor_is_dark') }}' {% endif %}"
        icon_template: "{% if is_state('binary_sensor.esp_weathersensor_multisensor_is_dark', 'off') %} mdi:weather-sunny {% elif is_state('binary_sensor.esp_weathersensor_multisensor_is_dark', 'on') %} mdi:weather-night {% else %} mdi:map-marker-question-outline {% endif %}"
      esp_weathersensor_multisensor_rain_disp:
        value_template: "{% if is_state('binary_sensor.esp_weathersensor_multisensor_rain', 'off') %} nein {% elif is_state('binary_sensor.esp_weathersensor_multisensor_rain', 'on') %} ja {% else %} Invalid: '{{ states('binary_sensor.esp_weathersensor_multisensor_rain') }}' {% endif %}"
        icon_template: "{% if is_state('binary_sensor.esp_weathersensor_multisensor_rain', 'off') %} mdi:weather-sunny {% elif is_state('binary_sensor.esp_weathersensor_multisensor_rain', 'on') %} mdi:weather-pouring {% else %} mdi:map-marker-question-outline {% endif %}"
      esp_weathersensor_cover_protection_1_disp:
        value_template: "{% if is_state('binary_sensor.esp_weathersensor_cover_protection_1', 'off') %} nein {% elif is_state('binary_sensor.esp_weathersensor_cover_protection_1', 'on') %} ja {% else %} Invalid: '{{ states('binary_sensor.esp_weathersensor_cover_protection_1') }}' {% endif %}"
        icon_template: "{% if is_state('binary_sensor.esp_weathersensor_cover_protection_1', 'off') %} mdi:weather-sunny {% elif is_state('binary_sensor.esp_weathersensor_cover_protection_1', 'on') %} mdi:weather-windy {% else %} mdi:map-marker-question-outline {% endif %}"
      esp_weathersensor_cover_protection_2_disp:
        value_template: "{% if is_state('binary_sensor.esp_weathersensor_cover_protection_2', 'off') %} nein {% elif is_state('binary_sensor.esp_weathersensor_cover_protection_2', 'on') %} ja {% else %} Invalid: '{{ states('binary_sensor.esp_weathersensor_cover_protection_2') }}' {% endif %}"
        icon_template: "{% if is_state('binary_sensor.esp_weathersensor_cover_protection_2', 'off') %} mdi:weather-sunny {% elif is_state('binary_sensor.esp_weathersensor_cover_protection_2', 'on') %} mdi:weather-windy {% else %} mdi:map-marker-question-outline {% endif %}"
      oberursel_wasserampel:
        value_template: '{{ states("sensor.oberursel_wasserampel_raw")|regex_replace(find="gruen", replace="grün")|regex_replace(find="gelb", replace="GELB")|regex_replace(find="rot", replace="ROT") }}'
        icon_template: '{{ states("sensor.oberursel_wasserampel_raw")|regex_replace(find="gruen", replace="mdi:cup")|regex_replace(find="gelb", replace="mdi:cup-outline")|regex_replace(find="rot", replace="mdi:cup-off-outline") }}'

      weather_temp_met_no_temp:
        value_template: "{{ state_attr('weather.met_no', 'temperature') | float }}"
        unit_of_measurement: °C
      weather_temp_met_no_forecast_0_temp:
        value_template: "{% if state_attr('weather.met_no', 'forecast')[0] is defined and state_attr('weather.met_no', 'forecast')[0].temperature is defined %}{{ state_attr('weather.met_no', 'forecast')[0].temperature | float }}{% endif %}"
        unit_of_measurement: °C
      weather_temp_met_no_forecast_0_templow:
        value_template: "{% if state_attr('weather.met_no', 'forecast')[0] is defined and state_attr('weather.met_no', 'forecast')[0].templow is defined %}{{ state_attr('weather.met_no', 'forecast')[0].templow | float }}{% endif %}"
        unit_of_measurement: °C
      weather_temp_met_no_forecast_0_prec:
        value_template: "{% if state_attr('weather.met_no', 'forecast')[0] is defined and state_attr('weather.met_no', 'forecast')[0].precipitation is defined %}{{ state_attr('weather.met_no', 'forecast')[0].precipitation | float }}{% endif %}"
        unit_of_measurement: mm
      weather_temp_met_no_forecast_0_datetime:
        value_template: "{% if state_attr('weather.met_no', 'forecast')[0] is defined and state_attr('weather.met_no', 'forecast')[0].datetime is defined %}{{ state_attr('weather.met_no', 'forecast')[0].datetime }}{% endif %}"
      weather_temp_meteo_fr_temp:
        value_template: "{{ state_attr('weather.friedrichsdorf', 'temperature') | float }}"
        unit_of_measurement: °C
      weather_temp_meteo_fr_forecast_0_temp:
        value_template: "{% if state_attr('weather.friedrichsdorf', 'forecast')[1] is defined and state_attr('weather.friedrichsdorf', 'forecast')[1].temperature is defined %}{{ state_attr('weather.friedrichsdorf', 'forecast')[1].temperature | float }}{% endif %}"
        unit_of_measurement: °C
      weather_temp_meteo_fr_forecast_0_templow:
        value_template: "{% if state_attr('weather.friedrichsdorf', 'forecast')[1] is defined and state_attr('weather.friedrichsdorf', 'forecast')[1].templow is defined %}{{ state_attr('weather.friedrichsdorf', 'forecast')[1].templow | float }}{% endif %}"
        unit_of_measurement: °C
      weather_temp_meteo_fr_forecast_0_prec:
        value_template: "{% if state_attr('weather.friedrichsdorf', 'forecast')[1] is defined and state_attr('weather.friedrichsdorf', 'forecast')[1].precipitation is defined %}{{ state_attr('weather.friedrichsdorf', 'forecast')[1].precipitation | float }}{% endif %}"
        unit_of_measurement: mm
      weather_temp_meteo_fr_forecast_0_datetime:
        value_template: "{% if state_attr('weather.friedrichsdorf', 'forecast')[1] is defined and state_attr('weather.friedrichsdorf', 'forecast')[1].datetime is defined %}{{ state_attr('weather.friedrichsdorf', 'forecast')[1].datetime }}{% endif %}"
      weather_temp_dwd_l732_temp:
        value_template: "{{ state_attr('weather.dwd_weather_homburg_bad_filter', 'temperature') | float }}"
        unit_of_measurement: °C
      weather_temp_dwd_l732_forecast_0_temp:
        value_template: "{% if state_attr('weather.dwd_weather_homburg_bad_filter', 'forecast')[1] is defined and state_attr('weather.dwd_weather_homburg_bad_filter', 'forecast')[1].temperature is defined %}{{ state_attr('weather.dwd_weather_homburg_bad_filter', 'forecast')[1].temperature | float }}{% endif %}"
        unit_of_measurement: °C
      weather_temp_dwd_l732_forecast_0_templow:
        value_template: "{% if state_attr('weather.dwd_weather_homburg_bad_filter', 'forecast')[1] is defined and state_attr('weather.dwd_weather_homburg_bad_filter', 'forecast')[1].templow is defined %}{{ state_attr('weather.dwd_weather_homburg_bad_filter', 'forecast')[1].templow | float }}{% endif %}"
        unit_of_measurement: °C
      weather_temp_dwd_l732_forecast_0_prec:
        value_template: "{% if state_attr('weather.dwd_weather_homburg_bad_filter', 'forecast')[1] is defined and state_attr('weather.dwd_weather_homburg_bad_filter', 'forecast')[1].precipitation is defined %}{{ state_attr('weather.dwd_weather_homburg_bad_filter', 'forecast')[1].precipitation | float }}{% endif %}"
        unit_of_measurement: mm
      weather_temp_dwd_l732_forecast_0_prec_prob:
        value_template: "{% if state_attr('weather.dwd_weather_homburg_bad_filter', 'forecast')[1] is defined and state_attr('weather.dwd_weather_homburg_bad_filter', 'forecast')[1].precipitation_probability is defined %}{{ state_attr('weather.dwd_weather_homburg_bad_filter', 'forecast')[1].precipitation_probability | float }}{% endif %}"
        unit_of_measurement: "%"
      weather_temp_dwd_l732_forecast_0_datetime:
        value_template: "{% if state_attr('weather.dwd_weather_homburg_bad_filter', 'forecast')[1] is defined and state_attr('weather.dwd_weather_homburg_bad_filter', 'forecast')[1].datetime is defined %}{{ state_attr('weather.dwd_weather_homburg_bad_filter', 'forecast')[1].datetime }}{% endif %}"
      weather_temp_dwd_n4333_temp:
        value_template: "{{ state_attr('weather.dwd_weather_bad_homburg', 'temperature') | float }}"
        unit_of_measurement: °C
      weather_temp_dwd_n4333_forecast_0_temp:
        value_template: "{%if state_attr('weather.dwd_weather_bad_homburg', 'forecast')[1] is defined and state_attr('weather.dwd_weather_bad_homburg', 'forecast')[1].temperature is defined %}{{ state_attr('weather.dwd_weather_bad_homburg', 'forecast')[1].temperature | float }}{% endif %}"
        unit_of_measurement: °C
      weather_temp_dwd_n4333_forecast_0_templow:
        value_template: "{%if state_attr('weather.dwd_weather_bad_homburg', 'forecast')[1] is defined and state_attr('weather.dwd_weather_bad_homburg', 'forecast')[1].templow is defined %}{{ state_attr('weather.dwd_weather_bad_homburg', 'forecast')[1].templow | float }}{% endif %}"
        unit_of_measurement: °C
      weather_temp_dwd_n4333_forecast_0_prec:
        value_template: "{%if state_attr('weather.dwd_weather_bad_homburg', 'forecast')[1] is defined and state_attr('weather.dwd_weather_bad_homburg', 'forecast')[1].precipitation is defined %}{{ state_attr('weather.dwd_weather_bad_homburg', 'forecast')[1].precipitation | float }}{% endif %}"
        unit_of_measurement: mm
      weather_temp_dwd_n4333_forecast_0_prec_prob:
        value_template: "{%if state_attr('weather.dwd_weather_bad_homburg', 'forecast')[1] is defined and state_attr('weather.dwd_weather_bad_homburg', 'forecast')[1].precipitation_probability is defined %}{{ state_attr('weather.dwd_weather_bad_homburg', 'forecast')[1].precipitation_probability | float }}{% endif %}"
        unit_of_measurement: "%"
      weather_temp_dwd_n4333_forecast_0_datetime:
        value_template: "{%if state_attr('weather.dwd_weather_bad_homburg', 'forecast')[1] is defined and state_attr('weather.dwd_weather_bad_homburg', 'forecast')[1].datetime is defined %}{{ state_attr('weather.dwd_weather_bad_homburg', 'forecast')[1].datetime }}{% endif %}"


homeassistant:

  customize:

    # ESP Weather Sensor
    sensor.esp_weathersensor_multisensor_temp:
      friendly_name: Außentemperatur
    sensor.esp_weathersensor_multisensor_sun_east:
      friendly_name: Sonne von Osten
      device_class: illuminance
    sensor.esp_weathersensor_multisensor_sun_south:
      friendly_name: Sonne von Süden
      device_class: illuminance
    sensor.esp_weathersensor_multisensor_sun_west:
      friendly_name: Sonne von Westen
      device_class: illuminance
    sensor.esp_weathersensor_multisensor_daylight:
      friendly_name: Helligkeit
      device_class: illuminance
    sensor.esp_weathersensor_multisensor_is_dark_disp:
      friendly_name: dunkel
    sensor.esp_weathersensor_multisensor_windspeed:
      friendly_name: Windgeschwindigkeit
      icon: mdi:weather-windy-variant
    sensor.esp_weathersensor_multisensor_gusts:
      friendly_name: Böen
      icon: mdi:weather-windy
    sensor.esp_weathersensor_multisensor_rain_disp:
      friendly_name: Regen
    sensor.esp_weathersensor_cover_protection_1_disp:
      friendly_name: Cover Protection 1 aktiv
    sensor.esp_weathersensor_cover_protection_2_disp:
      friendly_name: Cover Protection 2 aktiv
    sensor.esp_weathersensor_tipping_bucket_precipitation:
      friendly_name: Niederschlag Wippe
    sensor.esp_weathersensor_tipping_bucket_precipitation_rate:
      friendly_name: Niederschlag

    # Regen
    sensor.sum_rain_24h:
      friendly_name: Regen 24h
    sensor.sum_rain_3d:
      friendly_name: Regen 3d
    sensor.sum_rain_7d:
      friendly_name: Regen 7d
    sensor.sum_rain_14d:
      friendly_name: Regen 14d
    sensor.sum_rain_21d:
      friendly_name: Regen 21d
    sensor.sum_rain_30d:
      friendly_name: Regen 30d

    # Oberursel Wasserampel
    sensor.oberursel_wasserampel:
      friendly_name: Wasserampel Oberursel
